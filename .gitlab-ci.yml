stages:
  - docker
  - deploy

docker:
  stage: docker

  image: docker:latest

  services:
    - docker:dind

  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" 

  # build-master:
  #   stage: build
  #   script:
  #     - docker build --pull -t "$CI_REGISTRY_IMAGE" .
  #     - docker push "$CI_REGISTRY_IMAGE"
  #   only:
  #     - master

  script:
    # - echo "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
    # - docker build --pull -t "$CI_REGISTRY_IMAGE:latest" .
    # - docker push "$CI_REGISTRY_IMAGE:latest"
    - docker login --username=_ --password=$HEROKU_AUTH_TOKEN registry.heroku.com 
    - echo $APP_ID_OR_NAME
    - docker tag $APP_ID_OR_NAME registry.heroku.com/$APP_ID_OR_NAME/web 
    - docker push  registry.heroku.com/$APP_ID_OR_NAME/web


    - WEB_DOCKER_IMAGE_ID=$(docker inspect $APP_ID_OR_NAME --format={{.Id}})

    # - curl -n -X PATCH https://api.heroku.com/apps/$APP_ID_OR_NAME/formation   -d '{"update":[{"type":"web", "docker_image":"$WEB_DOCKER_IMAGE_ID"}]}' -H "Content-Type:"
    - curl -n -X PATCH https://api.heroku.com/apps/$APP_ID_OR_NAME/formation   -d '{"updates":[{"type":"web", "docker_image":"$WEB_DOCKER_IMAGE_ID"}]}'   -H "Content-Type:application/json" -H "Accept:application/vnd.heroku+json; version=3.docker-releases" -H "Authorization:Bearer $HEROKU_AUTH_TOKEN" 


    # - chomd +x deploy_heroku.sh
    - ./deploy_heroku.sh
  only:
    - master
deploy:
  stage: deploy
  image: ruby:latest
  # stage: production
  only:
    - master
  script:
    - gem install dpl
    - dpl --provider=heroku --app=rmaycon-load-balancer --api-key=$HEROKU_KEY
    # HEROKU_PRODUCTION_API_KEY2
    # - dpl --provider=heroku --app="$app"0 --api-key=$HEROKU_PRODUCTION_API_KEY0
    # - dpl --provider=heroku --app="$app"1 --api-key=$HEROKU_PRODUCTION_API_KEY1
    # - dpl --provider=heroku --app="$app"2 --api-key=$HEROKU_PRODUCTION_API_KEY2
    # - dpl --provider=heroku --app="$app"3 --api-key=$HEROKU_PRODUCTION_API_KEY3
  

  # image: ayufan/openshift-cli

  # script: 
  #   - oc login "$OPENSHIFT_SERVER" --token="$OPENSHIFT_TOKEN" --insecure-skip-tls-verify 
  #   - oc import-image express-load-balancer